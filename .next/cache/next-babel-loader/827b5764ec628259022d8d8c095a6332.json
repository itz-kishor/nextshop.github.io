{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { useState, useContext, useEffect } from 'react';\nimport { DataContext } from '../../store/GlobalState';\nimport { imageUpload } from '../../utils/imageUpload';\nimport { postData, getData, putData } from '../../utils/fetchData';\nimport { useRouter } from 'next/router';\n\nconst ProductsManager = () => {\n  const initialState = {\n    title: '',\n    price: 0,\n    inStock: 0,\n    description: '',\n    content: '',\n    category: ''\n  };\n  const {\n    0: product,\n    1: setProduct\n  } = useState(initialState);\n  const {\n    title,\n    price,\n    inStock,\n    description,\n    content,\n    category\n  } = product;\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(DataContext);\n  const {\n    categories,\n    auth\n  } = state;\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: onEdit,\n    1: setOnEdit\n  } = useState(false);\n  useEffect(() => {\n    if (id) {\n      setOnEdit(true);\n      getData(`product/${id}`).then(res => {\n        setProduct(res.product);\n        setImages(res.product.images);\n      });\n    } else {\n      setOnEdit(false);\n      setProduct(initialState);\n      setImages([]);\n    }\n  }, [id]);\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProduct(_objectSpread(_objectSpread({}, product), {}, {\n      [name]: value\n    }));\n    dispatch({\n      type: 'NOTIFY',\n      payload: {}\n    });\n  };\n\n  const handleUploadInput = e => {\n    dispatch({\n      type: 'NOTIFY',\n      payload: {}\n    });\n    let newImages = [];\n    let num = 0;\n    let err = '';\n    const files = [...e.target.files];\n    if (files.length === 0) return dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: 'Files does not exist.'\n      }\n    });\n    files.forEach(file => {\n      if (file.size > 1024 * 1024) return err = 'The largest image size is 1mb';\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') return err = 'Image format is incorrect.';\n      num += 1;\n      if (num <= 5) newImages.push(file);\n      return newImages;\n    });\n    if (err) dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: err\n      }\n    });\n    const imgCount = images.length;\n    if (imgCount + newImages.length > 5) return dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: 'Select up to 5 images.'\n      }\n    });\n    setImages([...images, ...newImages]);\n  };\n\n  const deleteImage = index => {\n    const newArr = [...images];\n    newArr.splice(index, 1);\n    setImages(newArr);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (auth.user.role !== 'admin') return dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: 'Authentication is not valid.'\n      }\n    });\n    if (!title || !price || !inStock || !description || !content || category === 'all' || images.length === 0) return dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: 'Please add all the fields.'\n      }\n    });\n    dispatch({\n      type: 'NOTIFY',\n      payload: {\n        loading: true\n      }\n    });\n    let media = [];\n    const imgNewURL = images.filter(img => !img.url);\n    const imgOldURL = images.filter(img => img.url);\n    if (imgNewURL.length > 0) media = await imageUpload(imgNewURL);\n    let res;\n\n    if (onEdit) {\n      res = await putData(`product/${id}`, _objectSpread(_objectSpread({}, product), {}, {\n        images: [...imgOldURL, ...media]\n      }), auth.token);\n      if (res.err) return dispatch({\n        type: 'NOTIFY',\n        payload: {\n          error: res.err\n        }\n      });\n    } else {\n      res = await postData('product', _objectSpread(_objectSpread({}, product), {}, {\n        images: [...imgOldURL, ...media]\n      }), auth.token);\n      if (res.err) return dispatch({\n        type: 'NOTIFY',\n        payload: {\n          error: res.err\n        }\n      });\n    }\n\n    return dispatch({\n      type: 'NOTIFY',\n      payload: {\n        success: res.msg\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"products_manager\",\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Products Manager\"\n      })\n    }), /*#__PURE__*/_jsxs(\"form\", {\n      className: \"row\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: title,\n          placeholder: \"Title\",\n          className: \"d-block my-4 w-100 p-2\",\n          onChange: handleChangeInput\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-sm-6\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"price\",\n              children: \"Price\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"number\",\n              name: \"price\",\n              value: price,\n              placeholder: \"Price\",\n              className: \"d-block w-100 p-2\",\n              onChange: handleChangeInput\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-sm-6\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"price\",\n              children: \"In Stock\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"number\",\n              name: \"inStock\",\n              value: inStock,\n              placeholder: \"inStock\",\n              className: \"d-block w-100 p-2\",\n              onChange: handleChangeInput\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(\"textarea\", {\n          name: \"description\",\n          id: \"description\",\n          cols: \"30\",\n          rows: \"4\",\n          placeholder: \"Description\",\n          onChange: handleChangeInput,\n          className: \"d-block my-4 w-100 p-2\",\n          value: description\n        }), /*#__PURE__*/_jsx(\"textarea\", {\n          name: \"content\",\n          id: \"content\",\n          cols: \"30\",\n          rows: \"6\",\n          placeholder: \"Content\",\n          onChange: handleChangeInput,\n          className: \"d-block my-4 w-100 p-2\",\n          value: content\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"input-group-prepend px-0 my-2\",\n          children: /*#__PURE__*/_jsxs(\"select\", {\n            name: \"category\",\n            id: \"category\",\n            value: category,\n            onChange: handleChangeInput,\n            className: \"custom-select text-capitalize\",\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"all\",\n              children: \"All Products\"\n            }), categories.map(item => /*#__PURE__*/_jsx(\"option\", {\n              value: item._id,\n              children: item.name\n            }, item._id))]\n          })\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-info my-2 px-4\",\n          children: onEdit ? 'Update' : 'Create'\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-md-6 my-4\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"input-group-prepend\",\n            children: /*#__PURE__*/_jsx(\"span\", {\n              className: \"input-group-text\",\n              children: \"Upload\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"custom-file border rounded\",\n            children: /*#__PURE__*/_jsx(\"input\", {\n              type: \"file\",\n              className: \"custom-file-input\",\n              onChange: handleUploadInput,\n              multiple: true,\n              accept: \"image/*\"\n            })\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"row img-up mx-0\",\n          children: images.map((img, index) => /*#__PURE__*/_jsxs(\"div\", {\n            className: \"file_img my-1\",\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              src: img.url ? img.url : URL.createObjectURL(img),\n              alt: \"\",\n              className: \"img-thumbnail rounded\"\n            }), /*#__PURE__*/_jsx(\"span\", {\n              onClick: () => deleteImage(index),\n              children: \"X\"\n            })]\n          }, index))\n        })]\n      })]\n    })]\n  });\n};\n\nexport default ProductsManager;","map":null,"metadata":{},"sourceType":"module"}