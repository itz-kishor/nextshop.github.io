{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const ACTIONS = {\n  NOTIFY: 'NOTIFY',\n  AUTH: 'AUTH',\n  ADD_CART: 'ADD_CART',\n  ADD_MODAL: 'ADD_MODAL',\n  ADD_ORDERS: 'ADD_ORDERS',\n  ADD_USERS: 'ADD_USERS',\n  ADD_CATEGORIES: 'ADD_CATEGORIES'\n};\nexport const addToCart = (product, cart) => {\n  if (product.inStock === 0) return {\n    type: 'NOTIFY',\n    payload: {\n      error: 'This product is out of stock.'\n    }\n  };\n  const check = cart.every(item => {\n    return item._id !== product._id;\n  });\n  if (!check) return {\n    type: 'NOTIFY',\n    payload: {\n      error: 'The product has been added to cart.'\n    }\n  };\n  return {\n    type: 'ADD_CART',\n    payload: [...cart, _objectSpread(_objectSpread({}, product), {}, {\n      quantity: 1\n    })]\n  };\n};\nexport const decrease = (data, id) => {\n  const newData = [...data];\n  newData.forEach(item => {\n    if (item._id === id) item.quantity -= 1;\n  });\n  return {\n    type: 'ADD_CART',\n    payload: newData\n  };\n};\nexport const increase = (data, id) => {\n  const newData = [...data];\n  newData.forEach(item => {\n    if (item._id === id) item.quantity += 1;\n  });\n  return {\n    type: 'ADD_CART',\n    payload: newData\n  };\n};\nexport const deleteItem = (data, id, type) => {\n  const newData = data.filter(item => item._id !== id);\n  return {\n    type,\n    payload: newData\n  };\n};\nexport const updateItem = (data, id, post, type) => {\n  const newData = data.map(item => item._id === id ? post : item);\n  return {\n    type,\n    payload: newData\n  };\n};","map":null,"metadata":{},"sourceType":"module"}