{"ast":null,"code":"import connectDB from '../../../utils/connectDB';\nimport Users from '../../../models/userModel';\nimport jwt from 'jsonwebtoken';\nimport { createAccessToken } from '../../../utils/generateToken';\nconnectDB();\nexport default (async (req, res) => {\n  try {\n    const rf_token = req.cookies.refreshtoken;\n    if (!rf_token) return res.status(400).json({\n      err: 'Please login now!'\n    });\n    const result = jwt.verify(rf_token, process.env.REFRESH_TOKEN_SECRET);\n    if (!result) return res.status(400).json({\n      err: 'Your token is incorrect or has expired.'\n    });\n    const user = await Users.findById(result.id);\n    if (!user) return res.status(400).json({\n      err: 'User does not exist.'\n    });\n    const access_token = createAccessToken({\n      id: user._id\n    });\n    res.json({\n      access_token,\n      user: {\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        avatar: user.avatar,\n        root: user.root\n      }\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/hira sarkar/Desktop/New folder/nextjs-ecommerce/pages/api/auth/accessToken.js"],"names":["connectDB","Users","jwt","createAccessToken","req","res","rf_token","cookies","refreshtoken","status","json","err","result","verify","process","env","REFRESH_TOKEN_SECRET","user","findById","id","access_token","_id","name","email","role","avatar","root","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEAH,SAAS;AAET,gBAAe,OAAOI,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAG;AACC,UAAMC,QAAQ,GAAGF,GAAG,CAACG,OAAJ,CAAYC,YAA7B;AACA,QAAG,CAACF,QAAJ,EAAc,OAAOD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAE;AAAN,KAArB,CAAP;AAEd,UAAMC,MAAM,GAAGV,GAAG,CAACW,MAAJ,CAAWP,QAAX,EAAqBQ,OAAO,CAACC,GAAR,CAAYC,oBAAjC,CAAf;AACA,QAAG,CAACJ,MAAJ,EAAY,OAAOP,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAE;AAAN,KAArB,CAAP;AAEZ,UAAMM,IAAI,GAAG,MAAMhB,KAAK,CAACiB,QAAN,CAAeN,MAAM,CAACO,EAAtB,CAAnB;AACA,QAAG,CAACF,IAAJ,EAAU,OAAOZ,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAE;AAAN,KAArB,CAAP;AAEV,UAAMS,YAAY,GAAGjB,iBAAiB,CAAC;AAACgB,MAAAA,EAAE,EAAEF,IAAI,CAACI;AAAV,KAAD,CAAtC;AACAhB,IAAAA,GAAG,CAACK,IAAJ,CAAS;AACLU,MAAAA,YADK;AAELH,MAAAA,IAAI,EAAE;AACFK,QAAAA,IAAI,EAAEL,IAAI,CAACK,IADT;AAEFC,QAAAA,KAAK,EAAEN,IAAI,CAACM,KAFV;AAGFC,QAAAA,IAAI,EAAEP,IAAI,CAACO,IAHT;AAIFC,QAAAA,MAAM,EAAER,IAAI,CAACQ,MAJX;AAKFC,QAAAA,IAAI,EAAET,IAAI,CAACS;AALT;AAFD,KAAT;AAUH,GArBD,CAqBC,OAAMf,GAAN,EAAU;AACP,WAAON,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAEA,GAAG,CAACgB;AAAV,KAArB,CAAP;AACH;AACJ,CAzBD","sourcesContent":["import connectDB from '../../../utils/connectDB'\r\nimport Users from '../../../models/userModel'\r\nimport jwt from 'jsonwebtoken'\r\nimport { createAccessToken } from '../../../utils/generateToken'\r\n\r\nconnectDB()\r\n\r\nexport default async (req, res) => {\r\n    try{\r\n        const rf_token = req.cookies.refreshtoken;\r\n        if(!rf_token) return res.status(400).json({err: 'Please login now!'})\r\n\r\n        const result = jwt.verify(rf_token, process.env.REFRESH_TOKEN_SECRET)\r\n        if(!result) return res.status(400).json({err: 'Your token is incorrect or has expired.'})\r\n\r\n        const user = await Users.findById(result.id)\r\n        if(!user) return res.status(400).json({err: 'User does not exist.'})\r\n\r\n        const access_token = createAccessToken({id: user._id})\r\n        res.json({\r\n            access_token,\r\n            user: {\r\n                name: user.name,\r\n                email: user.email,\r\n                role: user.role,\r\n                avatar: user.avatar,\r\n                root: user.root\r\n            }\r\n        })\r\n    }catch(err){\r\n        return res.status(500).json({err: err.message})\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}