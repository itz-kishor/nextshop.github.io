{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport connectDB from '../../../utils/connectDB';\nimport Categories from '../../../models/categoriesModel';\nimport Products from '../../../models/productModel';\nimport auth from '../../../middleware/auth';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"PUT\":\n      await updateCategory(req, res);\n      break;\n\n    case \"DELETE\":\n      await deleteCategory(req, res);\n      break;\n  }\n});\n\nconst updateCategory = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'admin') return res.status(400).json({\n      err: \"Authentication is not valid.\"\n    });\n    const {\n      id\n    } = req.query;\n    const {\n      name\n    } = req.body;\n    const newCategory = await Categories.findOneAndUpdate({\n      _id: id\n    }, {\n      name\n    });\n    res.json({\n      msg: \"Success! Update a new category\",\n      category: _objectSpread(_objectSpread({}, newCategory._doc), {}, {\n        name\n      })\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};\n\nconst deleteCategory = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'admin') return res.status(400).json({\n      err: \"Authentication is not valid.\"\n    });\n    const {\n      id\n    } = req.query;\n    const products = await Products.findOne({\n      category: id\n    });\n    if (products) return res.status(400).json({\n      err: \"Please delete all products with a relationship\"\n    });\n    await Categories.findByIdAndDelete(id);\n    res.json({\n      msg: \"Success! Deleted a category\"\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/hira sarkar/Desktop/New folder/nextjs-ecommerce/pages/api/categories/[id].js"],"names":["connectDB","Categories","Products","auth","req","res","method","updateCategory","deleteCategory","result","role","status","json","err","id","query","name","body","newCategory","findOneAndUpdate","_id","msg","category","_doc","message","products","findOne","findByIdAndDelete"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AAEAH,SAAS;AAET,gBAAe,OAAOI,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAOD,GAAG,CAACE,MAAX;AACI,SAAK,KAAL;AACI,YAAMC,cAAc,CAACH,GAAD,EAAMC,GAAN,CAApB;AACA;;AACJ,SAAK,QAAL;AACI,YAAMG,cAAc,CAACJ,GAAD,EAAMC,GAAN,CAApB;AACA;AANR;AAQH,CATD;;AAWA,MAAME,cAAc,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACvC,MAAI;AACA,UAAMI,MAAM,GAAG,MAAMN,IAAI,CAACC,GAAD,EAAMC,GAAN,CAAzB;AACA,QAAGI,MAAM,CAACC,IAAP,KAAgB,OAAnB,EACA,OAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAE;AAAN,KAArB,CAAP;AAEA,UAAM;AAACC,MAAAA;AAAD,QAAOV,GAAG,CAACW,KAAjB;AACA,UAAM;AAACC,MAAAA;AAAD,QAASZ,GAAG,CAACa,IAAnB;AAEA,UAAMC,WAAW,GAAG,MAAMjB,UAAU,CAACkB,gBAAX,CAA4B;AAACC,MAAAA,GAAG,EAAEN;AAAN,KAA5B,EAAuC;AAACE,MAAAA;AAAD,KAAvC,CAA1B;AACAX,IAAAA,GAAG,CAACO,IAAJ,CAAS;AACLS,MAAAA,GAAG,EAAE,gCADA;AAELC,MAAAA,QAAQ,kCACDJ,WAAW,CAACK,IADX;AAEJP,QAAAA;AAFI;AAFH,KAAT;AAOH,GAhBD,CAgBE,OAAOH,GAAP,EAAY;AACV,WAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAEA,GAAG,CAACW;AAAV,KAArB,CAAP;AACH;AACJ,CApBD;;AAsBA,MAAMhB,cAAc,GAAG,OAAOJ,GAAP,EAAYC,GAAZ,KAAoB;AACvC,MAAI;AACA,UAAMI,MAAM,GAAG,MAAMN,IAAI,CAACC,GAAD,EAAMC,GAAN,CAAzB;AACA,QAAGI,MAAM,CAACC,IAAP,KAAgB,OAAnB,EACA,OAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAE;AAAN,KAArB,CAAP;AAEA,UAAM;AAACC,MAAAA;AAAD,QAAOV,GAAG,CAACW,KAAjB;AAEA,UAAMU,QAAQ,GAAG,MAAMvB,QAAQ,CAACwB,OAAT,CAAiB;AAACJ,MAAAA,QAAQ,EAAER;AAAX,KAAjB,CAAvB;AACA,QAAGW,QAAH,EAAa,OAAOpB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACrCC,MAAAA,GAAG,EAAE;AADgC,KAArB,CAAP;AAIb,UAAMZ,UAAU,CAAC0B,iBAAX,CAA6Bb,EAA7B,CAAN;AAEAT,IAAAA,GAAG,CAACO,IAAJ,CAAS;AAACS,MAAAA,GAAG,EAAE;AAAN,KAAT;AACH,GAfD,CAeE,OAAOR,GAAP,EAAY;AACV,WAAOR,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAEA,GAAG,CAACW;AAAV,KAArB,CAAP;AACH;AACJ,CAnBD","sourcesContent":["import connectDB from '../../../utils/connectDB'\r\nimport Categories from '../../../models/categoriesModel'\r\nimport Products from '../../../models/productModel'\r\nimport auth from '../../../middleware/auth'\r\n\r\nconnectDB()\r\n\r\nexport default async (req, res) => {\r\n    switch(req.method){\r\n        case \"PUT\":\r\n            await updateCategory(req, res)\r\n            break;\r\n        case \"DELETE\":\r\n            await deleteCategory(req, res)\r\n            break;\r\n    }\r\n}\r\n\r\nconst updateCategory = async (req, res) => {\r\n    try {\r\n        const result = await auth(req, res)\r\n        if(result.role !== 'admin')\r\n        return res.status(400).json({err: \"Authentication is not valid.\"})\r\n\r\n        const {id} = req.query\r\n        const {name} = req.body\r\n\r\n        const newCategory = await Categories.findOneAndUpdate({_id: id}, {name})\r\n        res.json({\r\n            msg: \"Success! Update a new category\",\r\n            category: {\r\n                ...newCategory._doc,\r\n                name\r\n            }\r\n        })\r\n    } catch (err) {\r\n        return res.status(500).json({err: err.message})\r\n    }\r\n}\r\n\r\nconst deleteCategory = async (req, res) => {\r\n    try {\r\n        const result = await auth(req, res)\r\n        if(result.role !== 'admin')\r\n        return res.status(400).json({err: \"Authentication is not valid.\"})\r\n\r\n        const {id} = req.query\r\n\r\n        const products = await Products.findOne({category: id})\r\n        if(products) return res.status(400).json({\r\n            err: \"Please delete all products with a relationship\"\r\n        })\r\n\r\n        await Categories.findByIdAndDelete(id)\r\n        \r\n        res.json({msg: \"Success! Deleted a category\"})\r\n    } catch (err) {\r\n        return res.status(500).json({err: err.message})\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}