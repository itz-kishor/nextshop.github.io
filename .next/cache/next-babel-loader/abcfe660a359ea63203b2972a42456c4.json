{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { useContext, useState, useEffect } from 'react';\nimport { DataContext } from '../../store/GlobalState';\nimport { updateItem } from '../../store/Actions';\nimport { useRouter } from 'next/router';\nimport { patchData } from '../../utils/fetchData';\n\nconst EditUser = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    state,\n    dispatch\n  } = useContext(DataContext);\n  const {\n    auth,\n    users\n  } = state;\n  const {\n    0: editUser,\n    1: setEditUser\n  } = useState([]);\n  const {\n    0: checkAdmin,\n    1: setCheckAdmin\n  } = useState(false);\n  const {\n    0: num,\n    1: setNum\n  } = useState(0);\n  useEffect(() => {\n    users.forEach(user => {\n      if (user._id === id) {\n        setEditUser(user);\n        setCheckAdmin(user.role === 'admin' ? true : false);\n      }\n    });\n  }, [users]);\n\n  const handleCheck = () => {\n    setCheckAdmin(!checkAdmin);\n    setNum(num + 1);\n  };\n\n  const handleSubmit = () => {\n    let role = checkAdmin ? 'admin' : 'user';\n\n    if (num % 2 !== 0) {\n      dispatch({\n        type: 'NOTIFY',\n        payload: {\n          loading: true\n        }\n      });\n      patchData(`user/${editUser._id}`, {\n        role\n      }, auth.token).then(res => {\n        if (res.err) return dispatch({\n          type: 'NOTIFY',\n          payload: {\n            error: res.err\n          }\n        });\n        dispatch(updateItem(users, editUser._id, _objectSpread(_objectSpread({}, editUser), {}, {\n          role\n        }), 'ADD_USERS'));\n        return dispatch({\n          type: 'NOTIFY',\n          payload: {\n            success: res.msg\n          }\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"edit_user my-3\",\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Edit User\"\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsxs(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: () => router.back(),\n        children: [/*#__PURE__*/_jsx(\"i\", {\n          className: \"fas fa-long-arrow-alt-left\",\n          \"aria-hidden\": true\n        }), \" Go Back\"]\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-md-4 mx-auto my-4\",\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        className: \"text-uppercase text-secondary\",\n        children: \"Edit User\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"name\",\n          className: \"d-block\",\n          children: \"Name\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          defaultValue: editUser.name,\n          disabled: true\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"email\",\n          className: \"d-block\",\n          children: \"Email\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          defaultValue: editUser.email,\n          disabled: true\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          type: \"checkbox\",\n          id: \"isAdmin\",\n          checked: checkAdmin,\n          style: {\n            width: '20px',\n            height: '20px'\n          },\n          onChange: handleCheck\n        }), /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"isAdmin\",\n          style: {\n            transform: 'translate(4px, -3px)'\n          },\n          children: \"isAdmin\"\n        })]\n      }), /*#__PURE__*/_jsx(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: handleSubmit,\n        children: \"Update\"\n      })]\n    })]\n  });\n};\n\nexport default EditUser;","map":null,"metadata":{},"sourceType":"module"}