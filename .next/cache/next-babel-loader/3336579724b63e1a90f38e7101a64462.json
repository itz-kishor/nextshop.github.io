{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hira sarkar\\\\Desktop\\\\New folder\\\\nextjs-ecommerce\\\\pages\\\\create\\\\[[...id]].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { useState, useContext, useEffect } from 'react';\nimport { DataContext } from '../../store/GlobalState';\nimport { imageUpload } from '../../utils/imageUpload';\nimport { postData, getData, putData } from '../../utils/fetchData';\nimport { useRouter } from 'next/router';\n\nconst ProductsManager = () => {\n  const initialState = {\n    title: '',\n    price: 0,\n    inStock: 0,\n    description: '',\n    content: '',\n    category: ''\n  };\n  const {\n    0: product,\n    1: setProduct\n  } = useState(initialState);\n  const {\n    title,\n    price,\n    inStock,\n    description,\n    content,\n    category\n  } = product;\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(DataContext);\n  const {\n    categories,\n    auth\n  } = state;\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: onEdit,\n    1: setOnEdit\n  } = useState(false);\n  useEffect(() => {\n    if (id) {\n      setOnEdit(true);\n      getData(`product/${id}`).then(res => {\n        setProduct(res.product);\n        setImages(res.product.images);\n      });\n    } else {\n      setOnEdit(false);\n      setProduct(initialState);\n      setImages([]);\n    }\n  }, [id]);\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProduct(_objectSpread(_objectSpread({}, product), {}, {\n      [name]: value\n    }));\n    dispatch({\n      type: 'NOTIFY',\n      payload: {}\n    });\n  };\n\n  const handleUploadInput = e => {\n    dispatch({\n      type: 'NOTIFY',\n      payload: {}\n    });\n    let newImages = [];\n    let num = 0;\n    let err = '';\n    const files = [...e.target.files];\n    if (files.length === 0) return dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: 'Files does not exist.'\n      }\n    });\n    files.forEach(file => {\n      if (file.size > 1024 * 1024) return err = 'The largest image size is 1mb';\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') return err = 'Image format is incorrect.';\n      num += 1;\n      if (num <= 5) newImages.push(file);\n      return newImages;\n    });\n    if (err) dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: err\n      }\n    });\n    const imgCount = images.length;\n    if (imgCount + newImages.length > 5) return dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: 'Select up to 5 images.'\n      }\n    });\n    setImages([...images, ...newImages]);\n  };\n\n  const deleteImage = index => {\n    const newArr = [...images];\n    newArr.splice(index, 1);\n    setImages(newArr);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (auth.user.role !== 'admin') return dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: 'Authentication is not valid.'\n      }\n    });\n    if (!title || !price || !inStock || !description || !content || category === 'all' || images.length === 0) return dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: 'Please add all the fields.'\n      }\n    });\n    dispatch({\n      type: 'NOTIFY',\n      payload: {\n        loading: true\n      }\n    });\n    let media = [];\n    const imgNewURL = images.filter(img => !img.url);\n    const imgOldURL = images.filter(img => img.url);\n    if (imgNewURL.length > 0) media = await imageUpload(imgNewURL);\n    let res;\n\n    if (onEdit) {\n      res = await putData(`product/${id}`, _objectSpread(_objectSpread({}, product), {}, {\n        images: [...imgOldURL, ...media]\n      }), auth.token);\n      if (res.err) return dispatch({\n        type: 'NOTIFY',\n        payload: {\n          error: res.err\n        }\n      });\n    } else {\n      res = await postData('product', _objectSpread(_objectSpread({}, product), {}, {\n        images: [...imgOldURL, ...media]\n      }), auth.token);\n      if (res.err) return dispatch({\n        type: 'NOTIFY',\n        payload: {\n          error: res.err\n        }\n      });\n    }\n\n    return dispatch({\n      type: 'NOTIFY',\n      payload: {\n        success: res.msg\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"products_manager\",\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Products Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"row\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: title,\n          placeholder: \"Title\",\n          className: \"d-block my-4 w-100 p-2\",\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"price\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"price\",\n              value: price,\n              placeholder: \"Price\",\n              className: \"d-block w-100 p-2\",\n              onChange: handleChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"price\",\n              children: \"In Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"inStock\",\n              value: inStock,\n              placeholder: \"inStock\",\n              className: \"d-block w-100 p-2\",\n              onChange: handleChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          id: \"description\",\n          cols: \"30\",\n          rows: \"4\",\n          placeholder: \"Description\",\n          onChange: handleChangeInput,\n          className: \"d-block my-4 w-100 p-2\",\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"content\",\n          id: \"content\",\n          cols: \"30\",\n          rows: \"6\",\n          placeholder: \"Content\",\n          onChange: handleChangeInput,\n          className: \"d-block my-4 w-100 p-2\",\n          value: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-prepend px-0 my-2\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            id: \"category\",\n            value: category,\n            onChange: handleChangeInput,\n            className: \"custom-select text-capitalize\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item._id,\n              children: item.name\n            }, item._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-info my-2 px-4\",\n          children: onEdit ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 my-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-prepend\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-file border rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"custom-file-input\",\n              onChange: handleUploadInput,\n              multiple: true,\n              accept: \"image/*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row img-up mx-0\",\n          children: images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file_img my-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: img.url ? img.url : URL.createObjectURL(img),\n              alt: \"\",\n              className: \"img-thumbnail rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => deleteImage(index),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 38\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ProductsManager;","map":{"version":3,"sources":["C:/Users/hira sarkar/Desktop/New folder/nextjs-ecommerce/pages/create/[[...id]].js"],"names":["Head","useState","useContext","useEffect","DataContext","imageUpload","postData","getData","putData","useRouter","ProductsManager","initialState","title","price","inStock","description","content","category","product","setProduct","images","setImages","state","dispatch","categories","auth","router","id","query","onEdit","setOnEdit","then","res","handleChangeInput","e","name","value","target","type","payload","handleUploadInput","newImages","num","err","files","length","error","forEach","file","size","push","imgCount","deleteImage","index","newArr","splice","handleSubmit","preventDefault","user","role","loading","media","imgNewURL","filter","img","url","imgOldURL","token","success","msg","map","item","_id","URL","createObjectURL"],"mappings":"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","sourcesContent":["import Head from 'next/head'\r\nimport {useState, useContext, useEffect} from 'react'\r\nimport {DataContext} from '../../store/GlobalState'\r\nimport {imageUpload} from '../../utils/imageUpload'\r\nimport {postData, getData, putData} from '../../utils/fetchData'\r\nimport {useRouter} from 'next/router'\r\n\r\nconst ProductsManager = () => {\r\n    const initialState = {\r\n        title: '',\r\n        price: 0,\r\n        inStock: 0,\r\n        description: '',\r\n        content: '',\r\n        category: ''\r\n    }\r\n    const [product, setProduct] = useState(initialState)\r\n    const {title, price, inStock, description, content, category} = product\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n    const {state, dispatch} = useContext(DataContext)\r\n    const {categories, auth} = state\r\n\r\n    const router = useRouter()\r\n    const {id} = router.query\r\n    const [onEdit, setOnEdit] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(id){\r\n            setOnEdit(true)\r\n            getData(`product/${id}`).then(res => {\r\n                setProduct(res.product)\r\n                setImages(res.product.images)\r\n            })\r\n        }else{\r\n            setOnEdit(false)\r\n            setProduct(initialState)\r\n            setImages([])\r\n        }\r\n    },[id])\r\n\r\n    const handleChangeInput = e => {\r\n        const {name, value} = e.target\r\n        setProduct({...product, [name]:value})\r\n        dispatch({type: 'NOTIFY', payload: {}})\r\n    }\r\n\r\n    const handleUploadInput = e => {\r\n        dispatch({type: 'NOTIFY', payload: {}})\r\n        let newImages = []\r\n        let num = 0\r\n        let err = ''\r\n        const files = [...e.target.files]\r\n\r\n        if(files.length === 0) \r\n        return dispatch({type: 'NOTIFY', payload: {error: 'Files does not exist.'}})\r\n\r\n        files.forEach(file => {\r\n            if(file.size > 1024 * 1024)\r\n            return err = 'The largest image size is 1mb'\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png')\r\n            return err = 'Image format is incorrect.'\r\n\r\n            num += 1;\r\n            if(num <= 5) newImages.push(file)\r\n            return newImages;\r\n        })\r\n\r\n        if(err) dispatch({type: 'NOTIFY', payload: {error: err}})\r\n\r\n        const imgCount = images.length\r\n        if(imgCount + newImages.length > 5)\r\n        return dispatch({type: 'NOTIFY', payload: {error: 'Select up to 5 images.'}})\r\n        setImages([...images, ...newImages])\r\n    }\r\n\r\n    const deleteImage = index => {\r\n        const newArr = [...images]\r\n        newArr.splice(index, 1)\r\n        setImages(newArr)\r\n    }\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault()\r\n        if(auth.user.role !== 'admin') \r\n        return dispatch({type: 'NOTIFY', payload: {error: 'Authentication is not valid.'}})\r\n\r\n        if(!title || !price || !inStock || !description || !content || category === 'all' || images.length === 0)\r\n        return dispatch({type: 'NOTIFY', payload: {error: 'Please add all the fields.'}})\r\n\r\n    \r\n        dispatch({type: 'NOTIFY', payload: {loading: true}})\r\n        let media = []\r\n        const imgNewURL = images.filter(img => !img.url)\r\n        const imgOldURL = images.filter(img => img.url)\r\n\r\n        if(imgNewURL.length > 0) media = await imageUpload(imgNewURL)\r\n\r\n        let res;\r\n        if(onEdit){\r\n            res = await putData(`product/${id}`, {...product, images: [...imgOldURL, ...media]}, auth.token)\r\n            if(res.err) return dispatch({type: 'NOTIFY', payload: {error: res.err}})\r\n        }else{\r\n            res = await postData('product', {...product, images: [...imgOldURL, ...media]}, auth.token)\r\n            if(res.err) return dispatch({type: 'NOTIFY', payload: {error: res.err}})\r\n        }\r\n\r\n        return dispatch({type: 'NOTIFY', payload: {success: res.msg}})\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"products_manager\">\r\n            <Head>\r\n                <title>Products Manager</title>\r\n            </Head>\r\n            <form className=\"row\" onSubmit={handleSubmit}>\r\n                <div className=\"col-md-6\">\r\n                    \r\n                    <input type=\"text\" name=\"title\" value={title}\r\n                    placeholder=\"Title\" className=\"d-block my-4 w-100 p-2\"\r\n                    onChange={handleChangeInput} />\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <label htmlFor=\"price\">Price</label>\r\n                            <input type=\"number\" name=\"price\" value={price}\r\n                            placeholder=\"Price\" className=\"d-block w-100 p-2\"\r\n                            onChange={handleChangeInput} />\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-6\">\r\n                            <label htmlFor=\"price\">In Stock</label>\r\n                            <input type=\"number\" name=\"inStock\" value={inStock}\r\n                            placeholder=\"inStock\" className=\"d-block w-100 p-2\"\r\n                            onChange={handleChangeInput} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <textarea name=\"description\" id=\"description\" cols=\"30\" rows=\"4\"\r\n                    placeholder=\"Description\" onChange={handleChangeInput}\r\n                    className=\"d-block my-4 w-100 p-2\" value={description} />\r\n\r\n                    <textarea name=\"content\" id=\"content\" cols=\"30\" rows=\"6\"\r\n                    placeholder=\"Content\" onChange={handleChangeInput}\r\n                    className=\"d-block my-4 w-100 p-2\" value={content} />\r\n\r\n                    <div className=\"input-group-prepend px-0 my-2\">\r\n                        <select name=\"category\" id=\"category\" value={category}\r\n                        onChange={handleChangeInput} className=\"custom-select text-capitalize\">\r\n                            <option value=\"all\">All Products</option>\r\n                            {\r\n                                categories.map(item => (\r\n                                    <option key={item._id} value={item._id}>\r\n                                        {item.name}\r\n                                    </option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-info my-2 px-4\">\r\n                        {onEdit ? 'Update': 'Create'}\r\n                    </button>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-md-6 my-4\">\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Upload</span>\r\n                        </div>\r\n                        <div className=\"custom-file border rounded\">\r\n                            <input type=\"file\" className=\"custom-file-input\"\r\n                            onChange={handleUploadInput} multiple accept=\"image/*\" />\r\n                        </div>\r\n\r\n                    </div> \r\n\r\n                    <div className=\"row img-up mx-0\">\r\n                        {\r\n                            images.map((img, index) => (\r\n                                <div key={index} className=\"file_img my-1\">\r\n                                    <img src={img.url ? img.url : URL.createObjectURL(img)}\r\n                                     alt=\"\" className=\"img-thumbnail rounded\" />\r\n\r\n                                     <span onClick={() => deleteImage(index)}>X</span>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                        \r\n\r\n                </div>\r\n\r\n               \r\n            </form>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductsManager"]},"metadata":{},"sourceType":"module"}