{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hira sarkar\\\\Desktop\\\\New folder\\\\nextjs-ecommerce\\\\components\\\\paypalBtn.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useRef, useContext } from 'react';\nimport { patchData } from '../utils/fetchData';\nimport { DataContext } from '../store/GlobalState';\nimport { updateItem } from '../store/Actions';\n\nvar paypalBtn = function paypalBtn(_ref) {\n  _s();\n\n  var order = _ref.order;\n  var refPaypalBtn = useRef();\n\n  var _useContext = useContext(DataContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var auth = state.auth,\n      orders = state.orders;\n  useEffect(function () {\n    paypal.Buttons({\n      createOrder: function createOrder(data, actions) {\n        // This function sets up the details of the transaction, including the amount and line item details.\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: order.total\n            }\n          }]\n        });\n      },\n      onApprove: function onApprove(data, actions) {\n        // This function captures the funds from the transaction.\n        dispatch({\n          type: 'NOTIFY',\n          payload: {\n            loading: true\n          }\n        });\n        return actions.order.capture().then(function (details) {\n          patchData(\"order/payment/\".concat(order._id), {\n            paymentId: details.payer.payer_id\n          }, auth.token).then(function (res) {\n            if (res.err) return dispatch({\n              type: 'NOTIFY',\n              payload: {\n                error: res.err\n              }\n            });\n            dispatch(updateItem(orders, order._id, _objectSpread(_objectSpread({}, order), {}, {\n              paid: true,\n              dateOfPayment: details.create_time,\n              paymentId: details.payer.payer_id,\n              method: 'Paypal'\n            }), 'ADD_ORDERS'));\n            return dispatch({\n              type: 'NOTIFY',\n              payload: {\n                success: res.msg\n              }\n            });\n          }); // This function shows a transaction success message to your buyer.\n        });\n      }\n    }).render(refPaypalBtn.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refPaypalBtn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(paypalBtn, \"Q7r/pGe3Y/9OcyIGHlqtGtU0XNM=\");\n\nexport default paypalBtn;","map":{"version":3,"sources":["C:/Users/hira sarkar/Desktop/New folder/nextjs-ecommerce/components/paypalBtn.js"],"names":["useEffect","useRef","useContext","patchData","DataContext","updateItem","paypalBtn","order","refPaypalBtn","state","dispatch","auth","orders","paypal","Buttons","createOrder","data","actions","create","purchase_units","amount","value","total","onApprove","type","payload","loading","capture","then","details","_id","paymentId","payer","payer_id","token","res","err","error","paid","dateOfPayment","create_time","method","success","msg","render","current"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAa;AAAA;;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAC3B,MAAMC,YAAY,GAAGP,MAAM,EAA3B;;AAD2B,oBAEDC,UAAU,CAACE,WAAD,CAFT;AAAA,MAEpBK,KAFoB,eAEpBA,KAFoB;AAAA,MAEbC,QAFa,eAEbA,QAFa;;AAAA,MAGnBC,IAHmB,GAGHF,KAHG,CAGnBE,IAHmB;AAAA,MAGbC,MAHa,GAGHH,KAHG,CAGbG,MAHa;AAK3BZ,EAAAA,SAAS,CAAC,YAAM;AACZa,IAAAA,MAAM,CAACC,OAAP,CAAe;AACXC,MAAAA,WAAW,EAAE,qBAASC,IAAT,EAAeC,OAAf,EAAwB;AACnC;AACA,eAAOA,OAAO,CAACV,KAAR,CAAcW,MAAd,CAAqB;AAC1BC,UAAAA,cAAc,EAAE,CAAC;AACfC,YAAAA,MAAM,EAAE;AACNC,cAAAA,KAAK,EAAEd,KAAK,CAACe;AADP;AADO,WAAD;AADU,SAArB,CAAP;AAOD,OAVU;AAWXC,MAAAA,SAAS,EAAE,mBAASP,IAAT,EAAeC,OAAf,EAAwB;AACjC;AACAP,QAAAA,QAAQ,CAAC;AAAEc,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,OAAO,EAAE;AAACC,YAAAA,OAAO,EAAE;AAAV;AAA3B,SAAD,CAAR;AAEA,eAAOT,OAAO,CAACV,KAAR,CAAcoB,OAAd,GAAwBC,IAAxB,CAA6B,UAASC,OAAT,EAAkB;AAEpD1B,UAAAA,SAAS,yBAAkBI,KAAK,CAACuB,GAAxB,GAA+B;AACtCC,YAAAA,SAAS,EAAEF,OAAO,CAACG,KAAR,CAAcC;AADa,WAA/B,EAENtB,IAAI,CAACuB,KAFC,CAAT,CAGCN,IAHD,CAGM,UAAAO,GAAG,EAAI;AACX,gBAAGA,GAAG,CAACC,GAAP,EAAY,OAAO1B,QAAQ,CAAC;AAAEc,cAAAA,IAAI,EAAE,QAAR;AAAkBC,cAAAA,OAAO,EAAE;AAACY,gBAAAA,KAAK,EAAEF,GAAG,CAACC;AAAZ;AAA3B,aAAD,CAAf;AAEZ1B,YAAAA,QAAQ,CAACL,UAAU,CAACO,MAAD,EAASL,KAAK,CAACuB,GAAf,kCACdvB,KADc;AAEjB+B,cAAAA,IAAI,EAAE,IAFW;AAELC,cAAAA,aAAa,EAAEV,OAAO,CAACW,WAFlB;AAGjBT,cAAAA,SAAS,EAAEF,OAAO,CAACG,KAAR,CAAcC,QAHR;AAGkBQ,cAAAA,MAAM,EAAE;AAH1B,gBAIhB,YAJgB,CAAX,CAAR;AAMA,mBAAO/B,QAAQ,CAAC;AAAEc,cAAAA,IAAI,EAAE,QAAR;AAAkBC,cAAAA,OAAO,EAAE;AAACiB,gBAAAA,OAAO,EAAEP,GAAG,CAACQ;AAAd;AAA3B,aAAD,CAAf;AACD,WAbD,EAFoD,CAgBpD;AACD,SAjBM,CAAP;AAkBD;AAjCU,KAAf,EAkCGC,MAlCH,CAkCUpC,YAAY,CAACqC,OAlCvB;AAmCH,GApCQ,EAoCP,EApCO,CAAT;AAsCA,sBACI;AAAK,IAAA,GAAG,EAAErC;AAAV;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,CA9CD;;GAAMF,S;;AAgDN,eAAeA,SAAf","sourcesContent":["import { useEffect, useRef, useContext } from 'react'\r\nimport { patchData } from '../utils/fetchData'\r\nimport {DataContext} from '../store/GlobalState'\r\nimport {updateItem} from '../store/Actions'\r\n\r\nconst paypalBtn = ({order}) => {\r\n    const refPaypalBtn = useRef()\r\n    const {state, dispatch} = useContext(DataContext)\r\n    const { auth, orders} = state\r\n\r\n    useEffect(() => {\r\n        paypal.Buttons({\r\n            createOrder: function(data, actions) {\r\n              // This function sets up the details of the transaction, including the amount and line item details.\r\n              return actions.order.create({\r\n                purchase_units: [{\r\n                  amount: {\r\n                    value: order.total\r\n                  }\r\n                }]\r\n              });\r\n            },\r\n            onApprove: function(data, actions) {\r\n              // This function captures the funds from the transaction.\r\n              dispatch({ type: 'NOTIFY', payload: {loading: true} })\r\n\r\n              return actions.order.capture().then(function(details) {\r\n\r\n                patchData(`order/payment/${order._id}`, {\r\n                  paymentId: details.payer.payer_id\r\n                }, auth.token)\r\n                .then(res => {\r\n                  if(res.err) return dispatch({ type: 'NOTIFY', payload: {error: res.err} })\r\n                  \r\n                  dispatch(updateItem(orders, order._id, {\r\n                    ...order, \r\n                    paid: true, dateOfPayment: details.create_time,\r\n                    paymentId: details.payer.payer_id, method: 'Paypal'\r\n                  }, 'ADD_ORDERS'))\r\n\r\n                  return dispatch({ type: 'NOTIFY', payload: {success: res.msg} })\r\n                })\r\n                // This function shows a transaction success message to your buyer.\r\n              });\r\n            }\r\n        }).render(refPaypalBtn.current);\r\n    },[])\r\n\r\n    return(\r\n        <div ref={refPaypalBtn}></div>\r\n    )\r\n}\r\n\r\nexport default paypalBtn"]},"metadata":{},"sourceType":"module"}